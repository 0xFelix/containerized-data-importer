sudo: required
language: go
go:
- 1.10.x

services:
- docker

env:
- CHANGE_MINIKUBE_NONE_USER=true K8S_VER=1.9.0 MK_VER=0.25.2 K6T_VER=0.4.0 SRC="http://www.tinycorelinux.net/9.x/x86/release/Core-current.iso"

notifications:
  irc:
    channels:
    - chat.freenode.net#kubevirt
    on_success: change
    on_failure: always

before_script:
- curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v$K8S_VER/bin/linux/amd64/kubectl
  && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
- curl -Lo minikube https://storage.googleapis.com/minikube/releases/v$MK_VER/minikube-linux-amd64
  && chmod +x minikube && sudo mv minikube /usr/local/bin/
- sudo minikube start --vm-driver=none --kubernetes-version=v$K8S_VER
- minikube update-context
- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}';
  until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do
  sleep 1; done
- k_wait_all_running() { while [[ "$(kubectl get $1 --all-namespaces --field-selector=status.phase!=Running
  | wc -l)" -gt 1 ]]; do kubectl get $1 --all-namespaces ; sleep 6; done ; }
- kubectl apply -f https://github.com/kubevirt/kubevirt/releases/download/v$K6T_VER/kubevirt.yaml
- k_wait_all_running pods

script:
- kubectl apply -f manifests/example/endpoint-secret.yaml
- kubectl apply -f manifests/controller/cdi-controller-deployment.yaml
- make manifests/example/golden-pvc.yaml URI="$SRC"
- kubectl apply -f manifests/example/golden-pvc.yaml
- k_wait_all_running pods
- kubectl get pods --all-namespaces
- make test

before_deploy:
- make controller importer
- git config --local user.name "screeley44"
- git config --local user.email "screeley@redhat.com"
- source version && git tag -f $RELEASE_TAG

deploy:
- provider: script
  script: docker login -u="$DOCKER_USER" -p="$DOCKER_PASS" && make release
  skip_cleanup: true
  on:
    branch: master
- provider: releases
  api_key:
    secure: o3RvAnOm3q3ml1WVL1OY+8d1E5aC3WaoLepgDyuTIa6mSY+9W1jP/jRB2p/fiP02YB1PB0U65TxeFcwrf5T7lGzYbxlinZic2sJ0IEJdXpio3OD929+zx7YEjFxobFYptOoxbxRvo9t1drobiufLzCbF1oc/rRSLVkyRc1kL2ckFFbDOfSiUbGFCvM2jZmLgOL1ABUOgHgXq6oIyH8dmuW3RKKFjbF5n8RyH5dzCZVWH+BWuqM7jfCBh6v3CI/J8FP9M95bu0CF6yGM4txiqOiPQwd2qwk6W5auW2EafpAGg52nTVpBfUJG3faRZBAFuWAEUqjwCqigCGJx3AtARCI7glsq8IYPda56uxcQbv4qin65amo0FFzIWLGHq+ZDqwrf0fraZKQ5L6GykyGNRWS1e9kjcJtWk6QyMmy7zTYXHOLFq35CeCvssxRZfiHeXKrsaE3Wj763ywUQLbA3xyzBQFySPVHiWQSUTHyQjEji3GqNDhYtLHG2cA2+zhi3sYSPfTZ45ODmyQCSzZc023NDHdWBk1KwDTrO/JqhoL0hyho8apSV0rEZjywVeGvPn23Qb5FtevFv7WRdOSm/L+whwYv0K4XcKH9pCSdt40WV8IQoHXQ+MR+5FXC7Sw7TuqpKY3fq4aSRF2WzC+0Fj3vawQ7abOiytEyikLTwm1/E=
  skip_cleanup: true
  overwrite: true
  file:
    - bin/import-controller
    - bin/importer
  on:
    branch: master
    repo: kubevirt/containerized-data-importer
