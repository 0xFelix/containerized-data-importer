sudo: required
language: go
go:
- 1.10.x
services:
- docker
env:
- CHANGE_MINIKUBE_NONE_USER=true K8S_VER=1.9.0 MK_VER=0.25.2 K6T_VER=0.4.0 SRC="http://www.tinycorelinux.net/9.x/x86/release/Core-current.iso"
notifications:
  irc:
    channels:
    - chat.freenode.net#kubevirt
    on_success: change
    on_failure: always
before_script:
- curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v$K8S_VER/bin/linux/amd64/kubectl
  && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
- curl -Lo minikube https://storage.googleapis.com/minikube/releases/v$MK_VER/minikube-linux-amd64
  && chmod +x minikube && sudo mv minikube /usr/local/bin/
- sudo minikube start --vm-driver=none --kubernetes-version=v$K8S_VER
- minikube update-context
- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}';
  until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do
  sleep 1; done
- k_wait_all_running() { while [[ "$(kubectl get $1 --all-namespaces --field-selector=status.phase!=Running
  | wc -l)" -gt 1 ]]; do kubectl get $1 --all-namespaces ; sleep 6; done ; }
- kubectl apply -f https://github.com/kubevirt/kubevirt/releases/download/v$K6T_VER/kubevirt.yaml
- k_wait_all_running pods
script:
- kubectl apply -f manifests/example/endpoint-secret.yaml
- kubectl apply -f manifests/controller/cdi-controller-deployment.yaml
- make manifests/example/golden-pvc.yaml URI="$SRC"
- kubectl apply -f manifests/example/golden-pvc.yaml
- k_wait_all_running pods
- kubectl get pods --all-namespaces
- make test
before_deploy:
- git config --local user.name "copejon"
- git config --local user.email "copejon@redhat.com"
- docker login -u="$DOCKER_USER" -p="$DOCKER_PASS"
deploy:
# When a git tag is set, propagate the new version throughout CDI and
# publish new images with the tag
- provider: script
  on:
    branch: master
    repo: kubevirt/containerized-data-importer
  script: hack/version-and-deploy.sh $TRAVIS_TAG
  skip_cleanup: true
  on:
    branch: master
    repo: kubevirt/containerized-data-importer
    tags: true
# When a PR is merged into master, build and push fresh CDI
# images with the current version
- provider: script
  script: make release
  skip_cleanup: true
  on:
    branch: master
    repo: kubevirt/containerized-data-importer
# When a PR is merged into master, build and upload fresh binaries
- provider: releases
  on:
    repo: kubevirt/containerized-data-importer
  api_key:
    secure: vJBZnfjNdprDA85YLp/kOUFxhYJRmxIx3r5EMk3FFnXYGJf0upyQUwFcU4TP6bJfgif2JgjuMAim92pyQvKcM9GH9vxWdmQPNBJwQUkNmzlBDhoIrH2O0SWw2IeuXqfHgD88TB+6S90lTK+FmsG2Y/bpf4QZxMvplzfjoPY76I/UQ6q0jC2pvOlduZpMXtJ+4e9uKp8zGW2pzNuw0d37pA66QJ2vFGq27farQijywmkPJmYZ1xvcpqTSklMonGLy8g8WSoOjD7VNvGIQfLALmU6XynQ/nF/LXbuCzB4/xq7GqmFPzDeKFmN7Gpv8U9QMhICCRsNCXeJuNs5wDrLJCseS8oAr+VWhCTvYsfCvIheTNrBaXJa9o9DVGgGtIP86NHb01PfVXb1iKEKPYo7xatDCxSVjaQwx1tbWuHoY3+E6z2zBMhZc/jwG5rYzQ/cvMaHOEgAFUkl9K5xV0ojhKrXyujf4nC/QJkyS7S6N+FvIGLseZywpH+1tIAXJ5kJFbJ0Y7Fkz6a4uQUd4TxpwXayqlXenE0uWawYURlevexDt3RWs2+vBTwg29lHVxcrdd8n3beFixp23V/wXg0B2j8EKUJXh/G8JXQ5LmPYXoQRiSwWqdAuhZF5HeuVXHuvRUzN7ADF3cQPT1JpG1786WqxkbK2OyL8bMV0a1KNdr/4=
  overwrite: true
  skip_cleanup: true
  file:
  - bin/importer
  - bin/import-controller
  - manifests/controller/cdi-controller-deployment.yaml
