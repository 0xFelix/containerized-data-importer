sudo: required
language: go
go:
- 1.10.x
services:
- docker
env:
- CHANGE_MINIKUBE_NONE_USER=true K8S_VER=1.9.0 MK_VER=0.25.2 K6T_VER=0.4.0 SRC="http://www.tinycorelinux.net/9.x/x86/release/Core-current.iso"
notifications:
  irc:
    channels:
    - chat.freenode.net#kubevirt
    on_success: change
    on_failure: always
before_script:
- curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v$K8S_VER/bin/linux/amd64/kubectl
  && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
- curl -Lo minikube https://storage.googleapis.com/minikube/releases/v$MK_VER/minikube-linux-amd64
  && chmod +x minikube && sudo mv minikube /usr/local/bin/
- sudo minikube start --vm-driver=none --kubernetes-version=v$K8S_VER
- minikube update-context
- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}';
  until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do
  sleep 1; done
- k_wait_all_running() { while [[ "$(kubectl get $1 --all-namespaces --field-selector=status.phase!=Running
  | wc -l)" -gt 1 ]]; do kubectl get $1 --all-namespaces ; sleep 6; done ; }
- kubectl apply -f https://github.com/kubevirt/kubevirt/releases/download/v$K6T_VER/kubevirt.yaml
- k_wait_all_running pods
script:
- kubectl apply -f manifests/example/endpoint-secret.yaml
- kubectl apply -f manifests/controller/cdi-controller-deployment.yaml
- make manifests/example/golden-pvc.yaml URI="$SRC"
- kubectl apply -f manifests/example/golden-pvc.yaml
- k_wait_all_running pods
- kubectl get pods --all-namespaces
- make test
before_deploy:
- make controller importer
- git config --local user.name "copejon"
- git config --local user.email "copejon@redhat.com"
- source version && git tag -f $RELEASE_TAG
deploy:
- provider: script
  on:
    branch: master
    repo: kubevirt/containerized-data-importer
  script: docker login -u="$DOCKER_USER" -p="$DOCKER_PASS" && make release
  skip_cleanup: true
- provider: releases
  on:
    branch: master
    repo: kubevirt/containerized-data-importer
  api_key:
    secure: oVefA4cgb5G/O/0kdN0UxsFL/Qv2xZjHeJDESorsUFzhA4Fhprb6U8bgvqq6pVLXddjv4m4lV4USLlntWt+ZpVyv8yC7W5dc2JccnM15jMD09yL4dmHumAwKtbN5Z6yO4O9a2lJIjMUF/AYbatgBialp+WF6zz5HqeGIplwqTWY55ca2hqsAqh56wMnFObn4rIMnKT1RAjaroDUzDJoiXOOks4LyLh+FsrbCcmmWDIT7BScvlELAPI4I+xGfCWQ5wdfB9U8kUFGqs9NZ40KyvX5JIjwDrvyyOGiQ8E6ao07HfdSWaNZW3o4Kbg+GHHT6XImcUXAxbFNW85L0YSnS8/zbwWarHz9sYSRDdFkR5efArmGluesq/B/fuBRuUvnK3aoUVDIIq6LphXQo7DeoUIzODfQnaQ/INcYK99BIFZBIByZ8yNB/ckQPMgE5AQxgR2cpOxv1q/R6bSeusVOZs1t07w5WbE8eEk6B8X0mdQoJfYKKQ+C4YBE26hjNOaENxV70YCnfGOvjcJp/ooZs5meQHpLxL6RJjsDYU8W7LkVPxv3fdI3os/Zenzd84pj0Z8aUxvEKYddmyS6vdfyKLrsSV2qdByfhrH4xQJtHhJQAE9VBtnjtLmReoniN/mW7LUECyORsx6SSQBQ+0cSGoVS/ZejminEntUfscVc5icM=
  overwrite: true
  file:
  - bin/importer
  - bin/import-controller
  - manifests/controller/cdi-controller-deployment.yaml

